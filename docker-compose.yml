version: '3.4'

services:
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.6.2
    depends_on:
     - elasticsearch

  mssqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssqlserver
  
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
     - 27017:27017

  cacheserver:
    image: redis
    container_name: cacheserver
    ports:
     - 6379:6379
    environment:
     - ALLOW_EMPTY_PASSWORD=yes

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
     - 5672:5672
     - 15672:15672
     
  catalog.web:
    image: ${DOCKER_REGISTRY-}catalogweb
    container_name: catalog.web
    build:
      context: .
      dockerfile: Catalog.Web/Dockerfile
    depends_on:
     - mssqlserver
     - mongodb
     - cacheserver
     - elasticsearch

  identity.web:
    image: ${DOCKER_REGISTRY-}identityweb
    container_name: identity.web
    build:
      context: .
      dockerfile: Identity.Web/Dockerfile
    depends_on:
     - mssqlserver
     - rabbitmq
     - elasticsearch
     - ordering.web

  ordering.web:
    image: ${DOCKER_REGISTRY-}orderingweb
    container_name: ordering.web
    build:
      context: .
      dockerfile: Ordering.Web/Dockerfile
    depends_on:
     - mssqlserver
     - rabbitmq
     - cacheserver
     - elasticsearch

  onlinestore.gateway:
    image: ${DOCKER_REGISTRY-}onlinestoregateway
    build:
      context: .
      dockerfile: OnlineStore.Gateway/Dockerfile
    depends_on:
     - catalog.web
     - identity.web
     - ordering.web

networks:
  onlinestore:
    driver: bridge